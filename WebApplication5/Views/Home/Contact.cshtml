@model IEnumerable<WebApplication5.Models.aktivite>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Müşteri Aktiviteleri</title>
    <style>
        /* Stil ayarları */
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid #dee2e6;
        }

        th, td {
            padding: 12px;
            text-align: left;
        }

        th {
            background-color: #007bff;
            color: #fff;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: #e9ecef;
        }

        .btn-edit {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 5px 10px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 0.8rem;
            transition: background-color 0.3s;
        }

            .btn-edit:hover {
                background-color: #0056b3;
            }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
            border-radius: 8px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover, .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        #editForm input[type="text"], #editForm textarea, #editForm select {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            display: block;
            border-radius: 25px;
            border: 1px solid #ccc;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .btn-save {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: background-color 0.3s;
        }

            .btn-save:hover {
                background-color: #0056b3;
            }

        .search-bar {
            margin-bottom: 20px;
            text-align: right;
        }

            .search-bar input {
                padding: 8px;
                border-radius: 4px;
                border: 1px solid #ccc;
                width: 250px;
            }

        .pagination {
            margin: 20px 0;
            text-align: center;
        }

            .pagination button {
                background-color: #007bff;
                color: #fff;
                border: none;
                padding: 10px 20px;
                border-radius: 25px;
                cursor: pointer;
                font-size: 0.9rem;
                transition: background-color 0.3s;
                margin: 0 5px;
            }

                .pagination button:hover {
                    background-color: #0056b3;
                }

            .pagination .disabled {
                background-color: #e9ecef;
                color: #6c757d;
                cursor: not-allowed;
            }

        .customer-card {
            background-color: #007bff;
            color: #fff;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

            .customer-card p {
                margin: 0;
                font-size: 1rem;
            }
    </style>
</head>
<body>
    <div class="container">
        <h1>Müşteri Aktiviteleri</h1>
        <div class="search-bar">
            <input type="text" id="searchInput" placeholder="Müşteri ID ile ara..." onkeyup="searchTable()">
        </div>
        <table id="activityTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Müşteri ID</th>
                    <th>Aktivite Tipi</th>
                    <th>Aktivite Tarihi</th>
                    <th>Açıklama</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody id="activityTableBody">
                @if (Model != null && Model.Any())
                {
                    foreach (var aktivite in Model)
                    {
                        <tr>
                            <td>@aktivite.AktiviteID</td>
                            <td>@aktivite.MusteriID</td>
                            <td>@aktivite.AktiviteTipi</td>
                            <td>@aktivite.AktiviteTarihi.ToString("dd/MM/yyyy HH:mm:ss")</td>
                            <td>@aktivite.Aciklama</td>
                            <td>
                                <button class="btn-edit" onclick="openEditModal(@aktivite.AktiviteID,@aktivite.MusteriID, '@aktivite.AktiviteTipi', '@aktivite.Aciklama', '@aktivite.AktiviteTarihi')">Düzenle</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">Aktivite bulunamadı.</td>
                    </tr>
                }
            </tbody>
        </table>
        <div id="pagination" class="pagination"></div>
    </div>

    <!-- Düzenleme Modal yapısı -->
    <div id="editModal" class="modal">
        <div class="modal-content">

            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Aktivite Düzenle</h2>

            <div id="customerCard" class="customer-card">
                <p><strong>Müşteri ID:</strong> <span id="modalMusteriID"></span></p>
                <p><strong>Aktivite Tarihi:</strong> <span id="modalAktiviteTarihi"></span></p>
            </div>

            <form id="editForm" method="post" action="@Url.Action("Edit", "aktivite")">
                @Html.AntiForgeryToken()
                <input type="hidden" id="aktiviteID" name="AktiviteID">
                <input type="hidden" id="MusteriID" name="MusteriID">

                <label for="activityType">Aktivite Tipi</label>
                <select id="activityType" name="AktiviteTipi">
                    <option value="Teknik Destek">Teknik Destek</option>
                    <option value="Şikayet">Şikayet</option>
                    <option value="Genel">Genel</option>
                </select>

                <label for="activityNote">Açıklama</label>
                <textarea id="activityNote" name="Aciklama" rows="5"></textarea>

                <label for="activityDate">Tarih</label>
                <input type="text" id="activityDate" name="AktiviteTarihi" readonly>

                <button type="submit" class="btn-save">Kaydet</button>
            </form>
        </div>
    </div>

    <script>
        const recordsPerPage = 15;
        let currentPage = 1;
        let visibleRows = [];

        function searchTable() {
            const input = document.getElementById("searchInput");
            const filter = input.value.toUpperCase();
            const table = document.getElementById("activityTable");
            const tr = table.getElementsByTagName("tr");

            visibleRows = [];

            for (let i = 1; i < tr.length; i++) { // 1'den başlıyoruz çünkü ilk satır başlık
                const tdCustomerID = tr[i].getElementsByTagName("td")[1]; // Müşteri ID sütunu

                if (tdCustomerID) {
                    const customerIDValue = tdCustomerID.textContent || tdCustomerID.innerText;

                    if (customerIDValue.toUpperCase().indexOf(filter) > -1) {
                        visibleRows.push(tr[i]);
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }

            currentPage = 1; // Arama yapıldığında sayfayı sıfırla
            paginateTable();
        }

        function paginateTable() {
            const pagination = document.getElementById("pagination");
            const numPages = Math.ceil(visibleRows.length / recordsPerPage);

            pagination.innerHTML = "";

            if (numPages > 1) {
                if (currentPage > 1) {
                    pagination.innerHTML += `<button onclick="changePage(${currentPage - 1})">Önceki</button>`;
                }

                for (let i = 1; i <= numPages; i++) {
                    pagination.innerHTML += `<button ${i === currentPage ? 'class="disabled"' : ''} onclick="changePage(${i})">${i}</button>`;
                }

                if (currentPage < numPages) {
                    pagination.innerHTML += `<button onclick="changePage(${currentPage + 1})">Sonraki</button>`;
                }
            }

            showPage();
        }

        function showPage() {
            const start = (currentPage - 1) * recordsPerPage;
            const end = start + recordsPerPage;

            visibleRows.forEach((row, index) => {
                row.style.display = (index >= start && index < end) ? "" : "none";
            });
        }

        function changePage(page) {
            currentPage = page;
            showPage();
            paginateTable(); // Sayfa değiştirildiğinde pagination'u tekrar oluştur
        }

        function openEditModal(aktiviteID, MusteriID, aktiviteTipi, aciklama, aktiviteTarihi) {
            document.getElementById("aktiviteID").value = aktiviteID;
            document.getElementById("MusteriID").value = MusteriID;
            document.getElementById("activityType").value = aktiviteTipi;
            document.getElementById("activityNote").value = aciklama;
            document.getElementById("activityDate").value = aktiviteTarihi;

            // Müşteri bilgilerini güncelle
            document.getElementById("modalMusteriID").innerText = MusteriID;
            document.getElementById("modalAktiviteTarihi").innerText = aktiviteTarihi;

            document.getElementById("editModal").style.display = "block";
        }

        function closeEditModal() {
            document.getElementById("editModal").style.display = "none";
        }

        // Sayfa yüklendiğinde tabloyu arama ve sayfalama yap
        document.addEventListener("DOMContentLoaded", () => {
            searchTable(); // Sayfa yüklendiğinde arama yapılacak
        });
    </script>
</body>
</html>
